Index: Kullanıcıgirisi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"KULLANICI GİRİŞİ\"\"\"\r\n\r\n\r\nprint((\"-\"*30) + \"\\nKULLANICI GİRİŞİ\\n\" + (\"-\"*30))\r\n\r\nsys_kullanici_adi = \"abc123\"\r\nsys_parola = \"12345\"\r\nguvenlik_kodu = \"basari\"\r\n\r\ngiris_hakki = 3\r\n\r\nwhile True:\r\n    kullanici_adi = input(\"Kullanıcı adını giriniz: \")\r\n    parola = input(\"Parolanızı giriniz: \")\r\n    if sys_kullanici_adi != kullanici_adi and sys_parola == parola:\r\n        print(\"Kullanıcı adınız yanlış.\")\r\n        giris_hakki -= 1\r\n    elif sys_kullanici_adi == kullanici_adi and sys_parola != parola:\r\n        print(\"Parolanız yanlış...\")\r\n        giris_hakki -= 1\r\n    elif sys_kullanici_adi != kullanici_adi and sys_parola != parola:\r\n        print(\"Kullanıcı adınız ve parolanız yanlış...\")\r\n        giris_hakki -= 1\r\n    else:\r\n        print(\"Sisteme hoşgeldiniz...\")\r\n        break\r\n    if giris_hakki == 0:\r\n        print(\"Giriş hakkınız biti...\")\r\n        yenileme = input(\"Kullanıcı adı ve parola yenilemek ister misiniz?\\nYenilemek için 'e/E' çıkış yapmak için 'q/Q' basınız.\\n\")\r\n        if yenileme == \"e\" or yenileme == \"E\":\r\n            kod = input(\"Güvenlik Kodunu giriniz: \")\r\n            if kod == guvenlik_kodu:\r\n                yka = input(\"Yeni Kullanıcı Adınızı giriniz: \")\r\n                yp = input(\"Yeni Parolanızı Oluşturunuz: \")\r\n\r\n                sys_kullanici_adi = yka\r\n                sys_parola = yp\r\n                print(\"Kullanıcı Adınız ve Şifreniz Başarı İle Değiştirildi. \")\r\n                continue\r\n            else:\r\n                print(\"Hesabınız Bloke Edilmiştir. Lütfen desteğe başvurunuz..\")\r\n                break\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Kullanıcıgirisi.py b/Kullanıcıgirisi.py
--- a/Kullanıcıgirisi.py	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
+++ b/Kullanıcıgirisi.py	(date 1663441330535)
@@ -1,11 +1,11 @@
 """KULLANICI GİRİŞİ"""
 
 
-print(("-"*30) + "\nKULLANICI GİRİŞİ\n" + ("-"*30))
+print("**********************\nKULLANICI GİRİŞİ\n**********************")
 
-sys_kullanici_adi = "abc123"
+sys_kullanici_adi = "rramo"
 sys_parola = "12345"
-guvenlik_kodu = "basari"
+guvenlik_kodu = "basarı"
 
 giris_hakki = 3
 
Index: ScooterApp.py
===================================================================
diff --git a/ScooterApp.py b/ScooterApp.py
deleted file mode 100644
--- a/ScooterApp.py	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
+++ /dev/null	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
@@ -1,102 +0,0 @@
-import time
-print(("-" * 30) + "\nWelcome to Electric Scooter App!\nRide Price 0.19/min.\n" + ("-") * 30)
-
-print("\n1-Login\n2-Start to Ride\n3-Finish to Ride\n4-Profile\n5-My Wallet\n6-Add Balance\n7-Contact us\n8-Quit to App\n")
-
-first_name = "John"
-surname = "McAfee"
-born = "18/09/1945"
-e_mail = "johnmcafee@gmail.com"
-driving_password = "1111"
-
-sys_user_name = "John123"
-sys_email = "abcjohnabc@gmail.com"
-sys_password = "Abc123Abc"
-sys_driving_password = "1111"
-change = 3
-driving_change = 3
-company_phone = "05*********"
-company_mail = "scooterapp@gmail.com"
-wallet_balance = 15
-
-while True:
-    selection = input("Please Enter the Selection!\t: ")
-    while True:
-        if not 1<=int(selection)<=8:
-            print("You made the wrong selection!\nPlease try again!")
-            break
-        elif selection == "1":
-            user_name = input("Please Enter Your Username\t: ")
-            password = input("Please Enter Your Password\t: ")
-            if sys_user_name != user_name and sys_password == password:
-                print("Your account is logged in!")
-                time.sleep(1)
-                print("Your Username is Wrong!Try again!")
-                change -= 1
-            elif sys_user_name == user_name and sys_password != password:
-                print("Your account is logged in!")
-                time.sleep(1)
-                print("Your Password is Wrong!Try again!")
-                change -= 1
-            elif sys_user_name != user_name and sys_password != password:
-                print("Your account is logged in!")
-                time.sleep(1)
-                print("Your Username and Password is Wrong!Try again!")
-                change -= 1
-            else:
-                print("Welcome to Scooter App!")
-                break
-        elif selection == "2":
-            print("Your driving is beginning!\nPlease wait!")
-            time.sleep(1)
-            driving_password = input("Please Enter the Driving Password: ")
-            if sys_driving_password != driving_password:
-                print("Your Driving Password is wrong!\nPlease try again!")
-                driving_change -= 1
-            elif sys_driving_password == driving_password:
-                print("Have a nice ride.. :)\nDon't forget to the traffic rules!\nPlease don't forget to press 3 to end the ride!")
-                break
-        elif selection == "3":
-            print("Your ride is ending.\nPlease wait!")
-            time.sleep(1)
-            d_time_h = int(input("Please enter the driving time [Hours]\t: "))
-            d_time_m = int(input("Please enter the driving time [Minutes]\t: "))
-            tMinutes =d_time_h * 60
-            tMinutes += d_time_m
-            time.sleep(1)
-            print(f"The duration of your ride {d_time_h}:{d_time_m} = {tMinutes} finished in minutes!")
-            tPrice = (0.19 * tMinutes)
-            if tPrice > wallet_balance:
-                print("Opps!Sorry,insufficient balance!\nPlease Load Balance!")
-            elif tPrice <= wallet_balance:
-                time.sleep(1)
-                print(f"{tPrice} Dolars has been withdrawn from ScooterApp wallet!\nThank you for choosing us!")
-                wallet_balance -=tPrice
-                break
-        elif selection == "4":
-            profile = "\nName = John\nSurname = McAfee\nBorn = 18/09/1945\nE-mail = johnmcafee@gmail.com"
-            print(f"Your profile info;\n{profile}")
-            break
-        elif selection == "5":
-            print(f"Your wallet balance {wallet_balance} dolars.")
-            break
-        elif selection == "6":
-            deposit = float(input("Enter the money to be deposit\t: "))
-            wallet_balance += deposit
-            print(f"Money has been deposit in your wallet.Your current wallet amount {wallet_balance} dolars.")
-            break
-        elif selection == "7":
-            print(f"Our phone numbers = {company_phone}\nOur mail adress = {company_mail}.")
-            break
-        elif selection == "8":
-            print("Application is closing!")
-            break
-
-
-
-
-
-
-
-
-
Index: YazılımNedir.py
===================================================================
diff --git a/YazılımNedir.py b/YazılımNedir.py
deleted file mode 100644
--- a/YazılımNedir.py	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
+++ /dev/null	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
@@ -1,66 +0,0 @@
-# Challange Yapılabilecek Siteler
-"""
-1- HackerRank
-2- Codility
-3- Project Euler
-
-Kendinizi Güncel Tutmak İçin Kullanabileceğiniz Platformlar
-Buraya kadar geldik. Peki kendimizi nasıl sürekli güncel tutacağız? Şimdi sizlere bir yazılımcının mutlaka bilmesi gereken platformları listeliyoruz.
-
-1) Stack Overflow
-Stack Overflow programlama ve kodlama ile ilgili spesifik sorularınızı sorabileceğiniz veya başkalarının sorduğu sorulara cevap verebileceğiniz bir platform. Kurulduğu günden bu yana milyonlarca kullanıcı tarafından milyonlarca soruya cevap verildiği için yeni soru oluşturmadan önce cevaplananlara göz atmakta fayda var. Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-stack-overflow
-
-2) HackerRank
-Bu sitenin genel kuruluş amacı aslında yazılımcı çalıştırmak isteyen firmalara yazılımcı istihdamı sağlamak. Firmalar bu site içerisinde yazılımcıların mülakatlarını yapıp bilgi seviyelerini ölçebiliyor ve profillerini inceleyip onlara iş teklifi sunabiliyor. Türkiye’de henüz bu amaçla kullanılmasa da mülakatlarda göreceğiniz test caselerde bu platformdan sorulara denk gelebilirsiniz. Peki bu sitede neler yapabiliyorsunuz? Kendinizi geliştirmek istediğiniz bir programlama dilinde veya yapay zeka, veri tabanı, SQL programlama, matematik gibi birçok alanda pratik yapabiliyorsunuz. Eğitim kamplarına katılabiliyor ve ilerleme kaydettikçe rozet/sertifika kazanabiliyorsunuz. Yazdığınız çözümün daha kısa yolu varsa bununla ilgili geri bildirim alabiliyor ve buna göre kodunuzu düzenleyebiliyorsunuz. Başkalarının yazdığı kodları görebiliyor, diğer yazılımcılarla toplu halde veya birebir iletişime geçebiliyorsunuz. Tüm güzellikleriyle HackerRank bir yazılımcının üye olunmazsa olmaz diyeceğimiz platformlardan. Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-hackerrank
-
-3) Codility
-Codility de HackerRank’e benzer şekilde şirketlerin programcı işe alım süreçlerini hızlandırmaya yönelik kurulmuş bir site. Bu servisi kullanan şirketler, programcı işe almak istedikleri zaman platform üzerinde bir challenge oluşturup, adaylara ilgili linki yolluyorlar. Adaylar da ilgili platforma girip, verilen süre zarfında ilgili soruları çözüyor. Platform her ne kadar şirketler için kurulmuş olsa da bireysel olarak kendini test etmek isteyen kişiler ücretsiz bir şekilde kayıt olup, yararlanabiliyorlar. Programcılar için dersler kategorisi altında algoritma yeteneğinizi geliştirmeye yönelik pek çok soru bulunuyor. Testlerin hemen altında bulunan yorumlar kısmından da takıldığınız yerlerle ilgili sorular sorabiliyor ve cevaplar alabiliyorsunuz. Codility challengelarının algoritma konusunda oldukça zihin açıcı olduğunu düşünüyor ve bakmadan geçmeyiniz diyoruz. Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-codility
-
-4) Project Euler
-Project Euler sitesi oldukça zorlu matematik problemlerinden oluşuyor. Zihninize farklı düşünmeyi öğretmek ve problem çözme yeteneğinizi geliştirmek istiyorsanız Project Euler iyi bir seçenek olacaktır. Kendiniz denedikten sonra internette bu sorular üzerine kafa patlatmış kişilerin videolarını izleyip farklı çözüm yöntemlerini de görebilirsiniz. Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-project-euler
-
-5) Github
-GitHub, proje yönetim ve versiyon kontrol sistemi olmakla birlikte, ayrıca geliştiriciler için yapılmış bir sosyal ağ platformu. Tüm dünyadan başka insanlarla işbirliği içinde çalışmanıza, projelerinizi planlamanıza ve izlemenize olanak sağlıyor. Yaptığınız projelerin kodlarını buraya ekledikten sonra, GitHub profilinizin linkini özgeçmişinize eklemeyi unutmayın diyoruz. Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-github
-
-Kodlama yeteneğinizi geliştirmek için aşağıdaki siteleri de tavsiye ediyoruz;
-
-6) CodeWars
-Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-codewars
-
-7) LeetCode
-Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-leetcode
-
-8) edabit
-Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-edabit
-
-9) repl.it
-Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-replit
-
-10) CodePen
-Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-codepen
-
-11) Exercism.io
-Platforma buradaki bağlantıdan ulaşabilirsiniz.
-
-exercism
-"""
\ No newline at end of file
Index: koddenemeler.py
===================================================================
diff --git a/koddenemeler.py b/koddenemeler.py
deleted file mode 100644
--- a/koddenemeler.py	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
+++ /dev/null	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
@@ -1,25 +0,0 @@
-# def isim_ne():
-#     isim = input("İsminiz nedir?:")
-#     print(isim)
-#
-# print(f"Merhaba {isim_ne()}.Nasılsın?")
-
-#
-# def isim_ne():
-#     isim = input("İsminiz nedir?:")
-#     return isim
-# print(f"Merhaba {isim_ne()}.Nasılsın?")
-
-import random
-
-def sayi_uret(baslangıc=0, bitis=500, adet=6):
-    sayilar = set()
-
-    while len(sayilar) < adet:
-        sayilar.add(random.randrange(baslangıc,bitis))
-    return sayilar
-sayi_uret()
-
-
-
-
Index: ScooterApp2.py
===================================================================
diff --git a/ScooterApp2.py b/ScooterApp2.py
deleted file mode 100644
--- a/ScooterApp2.py	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
+++ /dev/null	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
@@ -1,156 +0,0 @@
-import time
-print(("-" * 30) + "\nWelcome to Electric Scooter App!\nRide Price 0.19/min.\n" + ("-") * 30)
-
-print("\n1-Start to Ride\n2-Finish to Ride\n3-Profile\n4-My Wallet\n5-Add Balance\n6-Contact us\n7-Quit to App\n")
-
-
-first_name = "John"
-surname = "xxx"
-born = "18/09/1945"
-e_mail = "johnxxx@gmail.com"
-driving_password = "1111"
-
-sys_user_name = "John123"
-sys_password = "Abc123Abc"
-sys_driving_password = "1111"
-sys_security_code = "SC123"
-
-change = 3
-driving_change = 3
-company_phone = "05*********"
-company_mail = "scooterapp@gmail.com"
-wallet_balance = 15
-
-while True:
-        user_name = input("Please Enter Your Username\t: ")
-        password = input("Please Enter Your Password\t: ")
-        if sys_user_name != user_name and sys_password == password:
-            print("Your account is logged in!")
-            time.sleep(1)
-            print("Your Username is Wrong!Try again!")
-            change -= 1
-        elif sys_user_name == user_name and sys_password != password:
-            print("Your account is logged in!")
-            time.sleep(1)
-            print("Your Password is Wrong!Try again!")
-            change -= 1
-        elif sys_user_name != user_name and sys_password != password:
-            print("Your account is logged in!")
-            time.sleep(1)
-            print("Your Username and Password is Wrong!Try again!")
-            change -= 1
-            if change == 0:
-                print("Your account has been suspended!")
-                regeneration = input("Do you want to renew username and password?\nPress 'y/Y' to reflesh, 'n/N' to exit!\n")
-                if regeneration == "y" or regeneration == "Y":
-                    security_code = input("Enter the security code\t: ")
-                    if sys_security_code == security_code:
-                        new_user_name = input("Please Enter Your New Username\t: ")
-                        new_password =  input("Please Enter Your New Password\t: ")
-
-                        sys_user_name = new_user_name
-                        sys_password = new_password
-                        print("Your username and password have been successfully changed!")
-
-                    else:
-                        print("Your account has been suspended!\nPleae contact with us!")
-                        break
-                elif regeneration == "n" or regeneration == "N":
-                    print("The page is closing!")
-                    time.sleep(1)
-                    print("See you!")
-                    break
-        else:
-            print("Welcome to Scooter App!")
-
-            while True:
-                selection = input("Please Enter the Selection\t: ")
-                if not 1 <= (selection.isdigit()) <= 7:
-                    print("You made the wrong selection!\nPlease try again!")
-                if selection == "1":
-                    print("Your driving is beginning!\nPlease wait!")
-                    time.sleep(1)
-                    driving_password = input("Please Enter the Driving Password: ")
-                    if sys_driving_password != driving_password:
-                        print("Your Driving Password is wrong!\nPlease try again!")
-                        driving_change -= 1
-                    elif sys_driving_password == driving_password:
-                        print("Have a nice ride.. :)\nDon't forget to the traffic rules!\nPlease don't forget to press 2 to end the ride!")
-                elif selection == "2":
-                    print("Your ride is ending.\nPlease wait!")
-                    time.sleep(1)
-                    d_time_h = int(input("Please enter the driving time [Hours]\t: "))
-                    d_time_m = int(input("Please enter the driving time [Minutes]\t: "))
-                    tMinutes = d_time_h * 60
-                    tMinutes += d_time_m
-                    time.sleep(1)
-                    print(f"The duration of your ride {d_time_h}:{d_time_m} = {tMinutes} finished in minutes!")
-                    tPrice = (0.19 * tMinutes)
-                    if tPrice > wallet_balance:
-                        print("Opps!Sorry,insufficient balance!\nPlease Load Balance!")
-                    elif tPrice <= wallet_balance:
-                        time.sleep(1)
-                        print(f"{tPrice} Dolars has been withdrawn from ScooterApp wallet!\nThank you for choosing us!")
-                        wallet_balance -= tPrice
-                elif selection == "3":
-                    # profile = "\nName = John\nSurname = Xxx\nBorn = 15/09/1985\nE-mail = johnxxx@gmail.com"
-                    print(f"Your profile info;\nName = {first_name}\nSurname = {surname}\nBorn = {born}\nE-mail = {e_mail}\n")
-                elif selection == "4":
-                    print(f"Your wallet balance {wallet_balance} dolars.")
-                elif selection == "5":
-                    deposit = float(input("Enter the money to be deposit\t: "))
-                    wallet_balance += deposit
-                    print(f"Money has been deposit in your wallet.Your current wallet amount {wallet_balance} dolars.")
-                elif selection == "6":
-                    print(f"Our phone numbers = {company_phone}\nOur mail adress = {company_mail}.")
-                elif selection == "7":
-                    print("Application is closing!")
-                    time.sleep(1)
-                    print("See you!")
-                    break
-
-            # selection = input("Please Enter the Selection!\t: ")
-            #
-            # if not 1 <=int(selection) <= 7:
-            #     print("You made the wrong selection!\nPlease try again!")
-            # if selection == "1":
-            #     print("Your driving is beginning!\nPlease wait!")
-            #     time.sleep(1)
-            #     driving_password = input("Please Enter the Driving Password: ")
-            #     if sys_driving_password != driving_password:
-            #         print("Your Driving Password is wrong!\nPlease try again!")
-            #         driving_change -= 1
-            #     elif sys_driving_password == driving_password:
-            #         print(
-            #             "Have a nice ride.. :)\nDon't forget to the traffic rules!\nPlease don't forget to press 3 to end the ride!")
-            # elif selection == "2":
-            #     print("Your ride is ending.\nPlease wait!")
-            #     time.sleep(1)
-            #     d_time_h = int(input("Please enter the driving time [Hours]\t: "))
-            #     d_time_m = int(input("Please enter the driving time [Minutes]\t: "))
-            #     tMinutes = d_time_h * 60
-            #     tMinutes += d_time_m
-            #     time.sleep(1)
-            #     print(f"The duration of your ride {d_time_h}:{d_time_m} = {tMinutes} finished in minutes!")
-            #     tPrice = (0.19 * tMinutes)
-            #     if tPrice > wallet_balance:
-            #         print("Opps!Sorry,insufficient balance!\nPlease Load Balance!")
-            #     elif tPrice <= wallet_balance:
-            #         time.sleep(1)
-            #         print(f"{tPrice} Dolars has been withdrawn from ScooterApp wallet!\nThank you for choosing us!")
-            #         wallet_balance -= tPrice
-            # elif selection == "3":
-            #     profile = "\nName = John\nSurname = McAfee\nBorn = 18/09/1945\nE-mail = johnmcafee@gmail.com"
-            #     print(f"Your profile info;\n{profile}")
-            # elif selection == "4":
-            #     print(f"Your wallet balance {wallet_balance} dolars.")
-            # elif selection == "5":
-            #     deposit = float(input("Enter the money to be deposit\t: "))
-            #     wallet_balance += deposit
-            #     print(f"Money has been deposit in your wallet.Your current wallet amount {wallet_balance} dolars.")
-            # elif selection == "6":
-            #     print(f"Our phone numbers = {company_phone}\nOur mail adress = {company_mail}.")
-            # elif selection == "7":
-            #     print("Application is closing!")
-            #     break
-
Index: YardımcıNotlar.py
===================================================================
diff --git a/YardımcıNotlar.py b/YardımcıNotlar.py
deleted file mode 100644
--- a/YardımcıNotlar.py	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
+++ /dev/null	(revision c7cd76fd176f5a42dde34fe2cd28418ad6c8f4db)
@@ -1,138 +0,0 @@
-import math
-import time
-"""def faktoriyelal():
-    sayi = int(input("Sayı gir:"))
-    x = math.factorial(sayi)
-    print(("{} sayısın faktoriyeli = {}".format(sayi,math.factorial(sayi))))
-faktoriyelal()"""
-"""def hipotenüsal():
-    kenar1 = int(input("1. Dik Kenarı Giriniz: "))
-    kenar2 = int(input("2. Dik Kenarı Giriniz: "))
-    x = math.hypot(kenar1,kenar2)
-    print("{} ve {} kenarlarının hipotenüsü = {}.".format(kenar1,kenar2,math.hypot(kenar1,kenar2)))
-hipotenüsal()"""
-"""def faktoriyelal(s):
-    return math.factorial(s)
-sayi2 = int(input("Sayı Giriniz: "))
-print("{} sayısının faktoriyeli = {}".format(sayi2,faktoriyelal(sayi2)))"""
-"""def hipotenüsal(a,b):
-    return math.hypot(a,b)
-kenar1 = int(input("1. Dik Kenarı Giriniz: "))
-kenar2 = int(input("2. Dik Kenarı Giriniz: "))
-print("{} ve {} kenarlarının hipotenüsü = {}".format(kenar1,kenar2,math.hypot(kenar1,kenar2)))"""
-"""def üsbulma(a,b):
-    return math.pow(a,b)
-sayi1 = int(input("A sayısını giriniz: "))
-sayi2 = int(input("B sayısını giriniz: "))
-print("{} üssü sonucu = {}".format(sayi1,sayi2,üsbulma(sayi1,sayi2)))"""
-
-"""def logBulma(l):
-    return math.log10(l)
-sayi3 = int(input("10'luk tabanda sayı giriniz: "))
-print("{} onluk tabanda kaşılığı = {}".format(sayi3,logBulma(sayi3)))"""
-
-"""def usAl():
-    sayı1 = int(input(" sayının tabanını giriniz : "))
-    sayı2 = int(input(" üssü giriniz : "))
-    print("işleminiz yapılıyor...")
-    time.sleep(1)
-    x = math.pow(sayı1, sayı2)
-    print("{} üssü {} = {} ".format(sayı1, sayı2, math.pow(sayı1, sayı2)))
-usAl()"""
-
-
-"""def usAl(a,b):
-    return math.pow(a,b)
-sayı1 = int(input(" sayının tabanını giriniz : "))
-sayı2 = int(input(" üssü giriniz : "))
-print("{} üssü {} = {} ".format(sayı1, sayı2, usAl(sayı1,sayı2)))"""
-
-m=[[[ 25, 36, 62],[ 28, 38, 64],[ 30, 40, 67]],[[ 1, 27, 56],[ 1, 25, 55],[ 2, 21, 51]]]
-
-numbers=[i for l in m for e in l for i in e]
-print(numbers)
-
-*x,y,z=(4,8,15,16,23,42)
-print(x)
-print(y)
-
-# enumerate_zip
-
-adlar = ['Tyler', 'Blake', 'Cory', 'Cameron']
-
-for i, e in enumerate(adlar): # burada index olarak olmasına gerek yok start noktası verilebilir.
-    print(i, "indexsindeki eleman", e)
-
-"""çıktı:0 indexsindeki eleman Tyler
-      1 indexsindeki eleman Blake
-      2 indexsindeki eleman Cory
-      3 indexsindeki eleman Cameron"""
-
-for i, e in enumerate(adlar, start=1): # başlama değerinden sonra 1 arttırarak devam ediyor.
-    print(i, "lokasyonundaki eleman", e)
-"""çıktı: 1 lokasyonundaki eleman Tyler
-       2 lokasyonundaki eleman Blake
-       3 lokasyonundaki eleman Cory
-       4 lokasyonundaki eleman Cameron"""
-
-# zip()
-
-ogrenciler = ["ogrenci_1", "ogrenci_2", "ogrenci_3"]
-notlar = [90,80,72]
-
-for s,g in zip(ogrenciler,notlar):
-    print(s,g)
-"""çıktı:
-ogrenci_1 90
-ogrenci_2 80
-ogrenci_3 72
-"""
-
-# zip örnek
-
-# Her ayki karı hesaplamak
-satis = [3500.00, 76300.00, 67200.00]
-maliyet = [56700.00, 21900.00, 12100.00]
-for i in range(len(maliyet)):
-    s = satis[i]
-    c = maliyet[i]
-
-    kar = s - c
-    print(f'Total profit: {kar}')
-
-for s,c in zip(satis,maliyet):
-    kar = s-c
-    print((f'Total profit: {kar}'))
-
-# zip() ile Dictionary Yaratmak
-
-keys = ['isim', 'soyad', 'ulke', 'is']
-values = ['Denis', 'Walker', 'Turkey', 'data scientist']
-
-d = {} # boş dic yaarattık
-
-for k,v in zip(keys,values):
-    d[k] = v # dic yeni eleman eklemek
-print(d)
-
-d = {} # boş dic yaarattık
-
-for i in range(len(keys)):
-    k = keys[i]
-    v = values[i]
-    d[k] = v
-print(d)
-
-x = 7
-def f(x):
-    res = 5
-    res = res * res
-    if x % 2 == 0:
-        print("Sonuc:", res)
-        return res
-    else:
-        print("Sonuc: ", res)
-
-        return res + 10
-
-f(4) # sonuç : 25 ama patika da sonuç 2525 çıktı :S
\ No newline at end of file
